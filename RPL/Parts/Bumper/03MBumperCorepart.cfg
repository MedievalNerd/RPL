PART
{
	// this is a sample config file, for determining a good file format for defining part parameters
	// comment line - ignored by cfg parser
	// empty lines, or lines without a '=' sign are also ignored
	// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
	// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
	// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
	// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
	// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
	// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = rocketNoseConeBumperCore
	module = Part
	author = NovaSilisko

	// --- asset parameters ---

	MODEL
	{
		model = Squad/Parts/Aero/rocketNoseCone/model
		scale = 0.12, 0.576, 0.12
	}

	scale = 1
	rescaleFactor = 1.0
	CrewCapacity = 0


	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_bottom = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0



	// --- FX definitions ---


	// --- editor parameters ---
	TechRequired = unmannedTech
	entryCost = 6500
	cost = 1000
	category = Pods
	subcategory = 0
	title = WAC Corporal Experiments (0.3m)
	manufacturer = Goliath National Products & Nerd Tech Industries
	description = Our first attempt at reaching Karman line.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.06 // 75kg - wings
	dragModelType = default
	maximum_drag = 0.1
	minimum_drag = 0.1
	angularDrag = 0.5
	crashTolerance = 10
	breakingForce = 150
	breakingTorque = 150
	maxTemp = 1600

	explosionPotential = 0

	vesselType = Probe

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.005
		}
	}

	MODULE
	{
		name = ModuleSPU
	}

	MODULE
	{
		name = ModuleRTAntennaPassive
		OmniRange = 190000 //Just about Flying High
		
		TRANSMITTER
		{
			PacketInterval = 0.3
			PacketSize = 2
			PacketResourceCost = 0.01
		}
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 36
		maxAmount = 36
	}
	MODULE
	{
		name = ModuleHeatShield
		direction = 0, 1, 0 // forwards
		reflective = 0.2
	}


	MODULE
	{
		name = ModuleSAS
	}

	MODULE
	{
		name = MechJebCore
	}

	RESOURCE
	{
		name = Data
		amount = 0
		maxAmount = 100
	}
		
		
	MODULE
	{
		name = CustomExperiment	
		experimentID = Bumper1
		
		experimentActionName = Atmospheric Readings
		resetActionName = Reset Readings

		TargetBody = Kerbin
		TargetSituation = FlyingHigh
		ExperimentResource = Data
		ExperimentCost = 30
		
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = False
	
		xmitDataScalar = 1.0
		
		FxModules = 0
		
		AlwaysActive = True
		
		dataIsCollectable = True
		collectActionName = Collect Data
		interactionRange = 1.2
		rerunnable = True
	}

	MODULE
	{
		name = CustomExperiment	
		experimentID = Bumper2
		
		experimentActionName = Radiation Readings
		resetActionName = Reset Readings

		TargetBody = Kerbin
		TargetSituation = InSpaceLow
		ExperimentResource = Data
		ExperimentCost = 100
		
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = False
	
		xmitDataScalar = 1.0
		
		FxModules = 0
		
		AlwaysActive = True
		
		dataIsCollectable = True
		collectActionName = Collect Data
		interactionRange = 1.2
		rerunnable = True
	}
		
	MODULE
	{
		name = DataGeneratorModule	
					
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = False
			
		IsEnabled = False

		InputResource = ElectricCharge
		OutputResource = Data
		
		InputRatio = 0.005
		OutputRatio = 1.0

		
		MaxDataAmount = 100
		
		TargetBody = Kerbin
		TargetSituation1 = FlyingHigh
		TargetSituation2 = InSpaceLow
	}
		
	
	
	
	// ----- DO NOT EDIT BELOW THIS POINT ------
}
